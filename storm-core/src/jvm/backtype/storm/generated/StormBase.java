/**
 * Autogenerated by Thrift Compiler (0.7.0)
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 */
package backtype.storm.generated;

import org.apache.commons.lang.builder.HashCodeBuilder;
import java.util.List;
import java.util.ArrayList;
import java.util.Map;
import java.util.HashMap;
import java.util.EnumMap;
import java.util.Set;
import java.util.HashSet;
import java.util.EnumSet;
import java.util.Collections;
import java.util.BitSet;
import java.nio.ByteBuffer;
import java.util.Arrays;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;

public class StormBase implements org.apache.thrift.TBase<StormBase, StormBase._Fields>, java.io.Serializable, Cloneable {
  private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("StormBase");

  private static final org.apache.thrift.protocol.TField NAME_FIELD_DESC = new org.apache.thrift.protocol.TField("name", org.apache.thrift.protocol.TType.STRING, (short)1);
  private static final org.apache.thrift.protocol.TField STATUS_FIELD_DESC = new org.apache.thrift.protocol.TField("status", org.apache.thrift.protocol.TType.I32, (short)2);
  private static final org.apache.thrift.protocol.TField NUM_WORKERS_FIELD_DESC = new org.apache.thrift.protocol.TField("num_workers", org.apache.thrift.protocol.TType.I64, (short)3);
  private static final org.apache.thrift.protocol.TField COMPONENT_EXECUTORS_FIELD_DESC = new org.apache.thrift.protocol.TField("component_executors", org.apache.thrift.protocol.TType.MAP, (short)4);
  private static final org.apache.thrift.protocol.TField LAUNCH_TIME_SECS_FIELD_DESC = new org.apache.thrift.protocol.TField("launch_time_secs", org.apache.thrift.protocol.TType.I32, (short)5);
  private static final org.apache.thrift.protocol.TField OWNER_FIELD_DESC = new org.apache.thrift.protocol.TField("owner", org.apache.thrift.protocol.TType.STRING, (short)6);

  private String name; // required
  private TopologyInitialStatus status; // required
  private long num_workers; // required
  private Map<String,Integer> component_executors; // required
  private int launch_time_secs; // required
  private String owner; // required

  /** The set of fields this struct contains, along with convenience methods for finding and manipulating them. */
  public enum _Fields implements org.apache.thrift.TFieldIdEnum {
    NAME((short)1, "name"),
    /**
     * 
     * @see TopologyInitialStatus
     */
    STATUS((short)2, "status"),
    NUM_WORKERS((short)3, "num_workers"),
    COMPONENT_EXECUTORS((short)4, "component_executors"),
    LAUNCH_TIME_SECS((short)5, "launch_time_secs"),
    OWNER((short)6, "owner");

    private static final Map<String, _Fields> byName = new HashMap<String, _Fields>();

    static {
      for (_Fields field : EnumSet.allOf(_Fields.class)) {
        byName.put(field.getFieldName(), field);
      }
    }

    /**
     * Find the _Fields constant that matches fieldId, or null if its not found.
     */
    public static _Fields findByThriftId(int fieldId) {
      switch(fieldId) {
        case 1: // NAME
          return NAME;
        case 2: // STATUS
          return STATUS;
        case 3: // NUM_WORKERS
          return NUM_WORKERS;
        case 4: // COMPONENT_EXECUTORS
          return COMPONENT_EXECUTORS;
        case 5: // LAUNCH_TIME_SECS
          return LAUNCH_TIME_SECS;
        case 6: // OWNER
          return OWNER;
        default:
          return null;
      }
    }

    /**
     * Find the _Fields constant that matches fieldId, throwing an exception
     * if it is not found.
     */
    public static _Fields findByThriftIdOrThrow(int fieldId) {
      _Fields fields = findByThriftId(fieldId);
      if (fields == null) throw new IllegalArgumentException("Field " + fieldId + " doesn't exist!");
      return fields;
    }

    /**
     * Find the _Fields constant that matches name, or null if its not found.
     */
    public static _Fields findByName(String name) {
      return byName.get(name);
    }

    private final short _thriftId;
    private final String _fieldName;

    _Fields(short thriftId, String fieldName) {
      _thriftId = thriftId;
      _fieldName = fieldName;
    }

    public short getThriftFieldId() {
      return _thriftId;
    }

    public String getFieldName() {
      return _fieldName;
    }
  }

  // isset id assignments
  private static final int __NUM_WORKERS_ISSET_ID = 0;
  private static final int __LAUNCH_TIME_SECS_ISSET_ID = 1;
  private BitSet __isset_bit_vector = new BitSet(2);

  public static final Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> metaDataMap;
  static {
    Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> tmpMap = new EnumMap<_Fields, org.apache.thrift.meta_data.FieldMetaData>(_Fields.class);
    tmpMap.put(_Fields.NAME, new org.apache.thrift.meta_data.FieldMetaData("name", org.apache.thrift.TFieldRequirementType.REQUIRED, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.STATUS, new org.apache.thrift.meta_data.FieldMetaData("status", org.apache.thrift.TFieldRequirementType.REQUIRED, 
        new org.apache.thrift.meta_data.EnumMetaData(org.apache.thrift.protocol.TType.ENUM, TopologyInitialStatus.class)));
    tmpMap.put(_Fields.NUM_WORKERS, new org.apache.thrift.meta_data.FieldMetaData("num_workers", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I64)));
    tmpMap.put(_Fields.COMPONENT_EXECUTORS, new org.apache.thrift.meta_data.FieldMetaData("component_executors", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.MapMetaData(org.apache.thrift.protocol.TType.MAP, 
            new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING), 
            new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32))));
    tmpMap.put(_Fields.LAUNCH_TIME_SECS, new org.apache.thrift.meta_data.FieldMetaData("launch_time_secs", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    tmpMap.put(_Fields.OWNER, new org.apache.thrift.meta_data.FieldMetaData("owner", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    metaDataMap = Collections.unmodifiableMap(tmpMap);
    org.apache.thrift.meta_data.FieldMetaData.addStructMetaDataMap(StormBase.class, metaDataMap);
  }

  public StormBase() {
  }

  public StormBase(
    String name,
    TopologyInitialStatus status)
  {
    this();
    this.name = name;
    this.status = status;
  }

  /**
   * Performs a deep copy on <i>other</i>.
   */
  public StormBase(StormBase other) {
    __isset_bit_vector.clear();
    __isset_bit_vector.or(other.__isset_bit_vector);
    if (other.is_set_name()) {
      this.name = other.name;
    }
    if (other.is_set_status()) {
      this.status = other.status;
    }
    this.num_workers = other.num_workers;
    if (other.is_set_component_executors()) {
      Map<String,Integer> __this__component_executors = new HashMap<String,Integer>();
      for (Map.Entry<String, Integer> other_element : other.component_executors.entrySet()) {

        String other_element_key = other_element.getKey();
        Integer other_element_value = other_element.getValue();

        String __this__component_executors_copy_key = other_element_key;

        Integer __this__component_executors_copy_value = other_element_value;

        __this__component_executors.put(__this__component_executors_copy_key, __this__component_executors_copy_value);
      }
      this.component_executors = __this__component_executors;
    }
    this.launch_time_secs = other.launch_time_secs;
    if (other.is_set_owner()) {
      this.owner = other.owner;
    }
  }

  public StormBase deepCopy() {
    return new StormBase(this);
  }

  @Override
  public void clear() {
    this.name = null;
    this.status = null;
    set_num_workers_isSet(false);
    this.num_workers = 0;
    this.component_executors = null;
    set_launch_time_secs_isSet(false);
    this.launch_time_secs = 0;
    this.owner = null;
  }

  public String get_name() {
    return this.name;
  }

  public void set_name(String name) {
    this.name = name;
  }

  public void unset_name() {
    this.name = null;
  }

  /** Returns true if field name is set (has been assigned a value) and false otherwise */
  public boolean is_set_name() {
    return this.name != null;
  }

  public void set_name_isSet(boolean value) {
    if (!value) {
      this.name = null;
    }
  }

  /**
   * 
   * @see TopologyInitialStatus
   */
  public TopologyInitialStatus get_status() {
    return this.status;
  }

  /**
   * 
   * @see TopologyInitialStatus
   */
  public void set_status(TopologyInitialStatus status) {
    this.status = status;
  }

  public void unset_status() {
    this.status = null;
  }

  /** Returns true if field status is set (has been assigned a value) and false otherwise */
  public boolean is_set_status() {
    return this.status != null;
  }

  public void set_status_isSet(boolean value) {
    if (!value) {
      this.status = null;
    }
  }

  public long get_num_workers() {
    return this.num_workers;
  }

  public void set_num_workers(long num_workers) {
    this.num_workers = num_workers;
    set_num_workers_isSet(true);
  }

  public void unset_num_workers() {
    __isset_bit_vector.clear(__NUM_WORKERS_ISSET_ID);
  }

  /** Returns true if field num_workers is set (has been assigned a value) and false otherwise */
  public boolean is_set_num_workers() {
    return __isset_bit_vector.get(__NUM_WORKERS_ISSET_ID);
  }

  public void set_num_workers_isSet(boolean value) {
    __isset_bit_vector.set(__NUM_WORKERS_ISSET_ID, value);
  }

  public int get_component_executors_size() {
    return (this.component_executors == null) ? 0 : this.component_executors.size();
  }

  public void put_to_component_executors(String key, int val) {
    if (this.component_executors == null) {
      this.component_executors = new HashMap<String,Integer>();
    }
    this.component_executors.put(key, val);
  }

  public Map<String,Integer> get_component_executors() {
    return this.component_executors;
  }

  public void set_component_executors(Map<String,Integer> component_executors) {
    this.component_executors = component_executors;
  }

  public void unset_component_executors() {
    this.component_executors = null;
  }

  /** Returns true if field component_executors is set (has been assigned a value) and false otherwise */
  public boolean is_set_component_executors() {
    return this.component_executors != null;
  }

  public void set_component_executors_isSet(boolean value) {
    if (!value) {
      this.component_executors = null;
    }
  }

  public int get_launch_time_secs() {
    return this.launch_time_secs;
  }

  public void set_launch_time_secs(int launch_time_secs) {
    this.launch_time_secs = launch_time_secs;
    set_launch_time_secs_isSet(true);
  }

  public void unset_launch_time_secs() {
    __isset_bit_vector.clear(__LAUNCH_TIME_SECS_ISSET_ID);
  }

  /** Returns true if field launch_time_secs is set (has been assigned a value) and false otherwise */
  public boolean is_set_launch_time_secs() {
    return __isset_bit_vector.get(__LAUNCH_TIME_SECS_ISSET_ID);
  }

  public void set_launch_time_secs_isSet(boolean value) {
    __isset_bit_vector.set(__LAUNCH_TIME_SECS_ISSET_ID, value);
  }

  public String get_owner() {
    return this.owner;
  }

  public void set_owner(String owner) {
    this.owner = owner;
  }

  public void unset_owner() {
    this.owner = null;
  }

  /** Returns true if field owner is set (has been assigned a value) and false otherwise */
  public boolean is_set_owner() {
    return this.owner != null;
  }

  public void set_owner_isSet(boolean value) {
    if (!value) {
      this.owner = null;
    }
  }

  public void setFieldValue(_Fields field, Object value) {
    switch (field) {
    case NAME:
      if (value == null) {
        unset_name();
      } else {
        set_name((String)value);
      }
      break;

    case STATUS:
      if (value == null) {
        unset_status();
      } else {
        set_status((TopologyInitialStatus)value);
      }
      break;

    case NUM_WORKERS:
      if (value == null) {
        unset_num_workers();
      } else {
        set_num_workers((Long)value);
      }
      break;

    case COMPONENT_EXECUTORS:
      if (value == null) {
        unset_component_executors();
      } else {
        set_component_executors((Map<String,Integer>)value);
      }
      break;

    case LAUNCH_TIME_SECS:
      if (value == null) {
        unset_launch_time_secs();
      } else {
        set_launch_time_secs((Integer)value);
      }
      break;

    case OWNER:
      if (value == null) {
        unset_owner();
      } else {
        set_owner((String)value);
      }
      break;

    }
  }

  public Object getFieldValue(_Fields field) {
    switch (field) {
    case NAME:
      return get_name();

    case STATUS:
      return get_status();

    case NUM_WORKERS:
      return Long.valueOf(get_num_workers());

    case COMPONENT_EXECUTORS:
      return get_component_executors();

    case LAUNCH_TIME_SECS:
      return Integer.valueOf(get_launch_time_secs());

    case OWNER:
      return get_owner();

    }
    throw new IllegalStateException();
  }

  /** Returns true if field corresponding to fieldID is set (has been assigned a value) and false otherwise */
  public boolean isSet(_Fields field) {
    if (field == null) {
      throw new IllegalArgumentException();
    }

    switch (field) {
    case NAME:
      return is_set_name();
    case STATUS:
      return is_set_status();
    case NUM_WORKERS:
      return is_set_num_workers();
    case COMPONENT_EXECUTORS:
      return is_set_component_executors();
    case LAUNCH_TIME_SECS:
      return is_set_launch_time_secs();
    case OWNER:
      return is_set_owner();
    }
    throw new IllegalStateException();
  }

  @Override
  public boolean equals(Object that) {
    if (that == null)
      return false;
    if (that instanceof StormBase)
      return this.equals((StormBase)that);
    return false;
  }

  public boolean equals(StormBase that) {
    if (that == null)
      return false;

    boolean this_present_name = true && this.is_set_name();
    boolean that_present_name = true && that.is_set_name();
    if (this_present_name || that_present_name) {
      if (!(this_present_name && that_present_name))
        return false;
      if (!this.name.equals(that.name))
        return false;
    }

    boolean this_present_status = true && this.is_set_status();
    boolean that_present_status = true && that.is_set_status();
    if (this_present_status || that_present_status) {
      if (!(this_present_status && that_present_status))
        return false;
      if (!this.status.equals(that.status))
        return false;
    }

    boolean this_present_num_workers = true && this.is_set_num_workers();
    boolean that_present_num_workers = true && that.is_set_num_workers();
    if (this_present_num_workers || that_present_num_workers) {
      if (!(this_present_num_workers && that_present_num_workers))
        return false;
      if (this.num_workers != that.num_workers)
        return false;
    }

    boolean this_present_component_executors = true && this.is_set_component_executors();
    boolean that_present_component_executors = true && that.is_set_component_executors();
    if (this_present_component_executors || that_present_component_executors) {
      if (!(this_present_component_executors && that_present_component_executors))
        return false;
      if (!this.component_executors.equals(that.component_executors))
        return false;
    }

    boolean this_present_launch_time_secs = true && this.is_set_launch_time_secs();
    boolean that_present_launch_time_secs = true && that.is_set_launch_time_secs();
    if (this_present_launch_time_secs || that_present_launch_time_secs) {
      if (!(this_present_launch_time_secs && that_present_launch_time_secs))
        return false;
      if (this.launch_time_secs != that.launch_time_secs)
        return false;
    }

    boolean this_present_owner = true && this.is_set_owner();
    boolean that_present_owner = true && that.is_set_owner();
    if (this_present_owner || that_present_owner) {
      if (!(this_present_owner && that_present_owner))
        return false;
      if (!this.owner.equals(that.owner))
        return false;
    }

    return true;
  }

  @Override
  public int hashCode() {
    HashCodeBuilder builder = new HashCodeBuilder();

    boolean present_name = true && (is_set_name());
    builder.append(present_name);
    if (present_name)
      builder.append(name);

    boolean present_status = true && (is_set_status());
    builder.append(present_status);
    if (present_status)
      builder.append(status.getValue());

    boolean present_num_workers = true && (is_set_num_workers());
    builder.append(present_num_workers);
    if (present_num_workers)
      builder.append(num_workers);

    boolean present_component_executors = true && (is_set_component_executors());
    builder.append(present_component_executors);
    if (present_component_executors)
      builder.append(component_executors);

    boolean present_launch_time_secs = true && (is_set_launch_time_secs());
    builder.append(present_launch_time_secs);
    if (present_launch_time_secs)
      builder.append(launch_time_secs);

    boolean present_owner = true && (is_set_owner());
    builder.append(present_owner);
    if (present_owner)
      builder.append(owner);

    return builder.toHashCode();
  }

  public int compareTo(StormBase other) {
    if (!getClass().equals(other.getClass())) {
      return getClass().getName().compareTo(other.getClass().getName());
    }

    int lastComparison = 0;
    StormBase typedOther = (StormBase)other;

    lastComparison = Boolean.valueOf(is_set_name()).compareTo(typedOther.is_set_name());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (is_set_name()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.name, typedOther.name);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(is_set_status()).compareTo(typedOther.is_set_status());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (is_set_status()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.status, typedOther.status);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(is_set_num_workers()).compareTo(typedOther.is_set_num_workers());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (is_set_num_workers()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.num_workers, typedOther.num_workers);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(is_set_component_executors()).compareTo(typedOther.is_set_component_executors());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (is_set_component_executors()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.component_executors, typedOther.component_executors);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(is_set_launch_time_secs()).compareTo(typedOther.is_set_launch_time_secs());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (is_set_launch_time_secs()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.launch_time_secs, typedOther.launch_time_secs);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(is_set_owner()).compareTo(typedOther.is_set_owner());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (is_set_owner()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.owner, typedOther.owner);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    return 0;
  }

  public _Fields fieldForId(int fieldId) {
    return _Fields.findByThriftId(fieldId);
  }

  public void read(org.apache.thrift.protocol.TProtocol iprot) throws org.apache.thrift.TException {
    org.apache.thrift.protocol.TField field;
    iprot.readStructBegin();
    while (true)
    {
      field = iprot.readFieldBegin();
      if (field.type == org.apache.thrift.protocol.TType.STOP) { 
        break;
      }
      switch (field.id) {
        case 1: // NAME
          if (field.type == org.apache.thrift.protocol.TType.STRING) {
            this.name = iprot.readString();
          } else { 
            org.apache.thrift.protocol.TProtocolUtil.skip(iprot, field.type);
          }
          break;
        case 2: // STATUS
          if (field.type == org.apache.thrift.protocol.TType.I32) {
            this.status = TopologyInitialStatus.findByValue(iprot.readI32());
          } else { 
            org.apache.thrift.protocol.TProtocolUtil.skip(iprot, field.type);
          }
          break;
        case 3: // NUM_WORKERS
          if (field.type == org.apache.thrift.protocol.TType.I64) {
            this.num_workers = iprot.readI64();
            set_num_workers_isSet(true);
          } else { 
            org.apache.thrift.protocol.TProtocolUtil.skip(iprot, field.type);
          }
          break;
        case 4: // COMPONENT_EXECUTORS
          if (field.type == org.apache.thrift.protocol.TType.MAP) {
            {
              org.apache.thrift.protocol.TMap _map208 = iprot.readMapBegin();
              this.component_executors = new HashMap<String,Integer>(2*_map208.size);
              for (int _i209 = 0; _i209 < _map208.size; ++_i209)
              {
                String _key210; // required
                int _val211; // required
                _key210 = iprot.readString();
                _val211 = iprot.readI32();
                this.component_executors.put(_key210, _val211);
              }
              iprot.readMapEnd();
            }
          } else { 
            org.apache.thrift.protocol.TProtocolUtil.skip(iprot, field.type);
          }
          break;
        case 5: // LAUNCH_TIME_SECS
          if (field.type == org.apache.thrift.protocol.TType.I32) {
            this.launch_time_secs = iprot.readI32();
            set_launch_time_secs_isSet(true);
          } else { 
            org.apache.thrift.protocol.TProtocolUtil.skip(iprot, field.type);
          }
          break;
        case 6: // OWNER
          if (field.type == org.apache.thrift.protocol.TType.STRING) {
            this.owner = iprot.readString();
          } else { 
            org.apache.thrift.protocol.TProtocolUtil.skip(iprot, field.type);
          }
          break;
        default:
          org.apache.thrift.protocol.TProtocolUtil.skip(iprot, field.type);
      }
      iprot.readFieldEnd();
    }
    iprot.readStructEnd();
    validate();
  }

  public void write(org.apache.thrift.protocol.TProtocol oprot) throws org.apache.thrift.TException {
    validate();

    oprot.writeStructBegin(STRUCT_DESC);
    if (this.name != null) {
      oprot.writeFieldBegin(NAME_FIELD_DESC);
      oprot.writeString(this.name);
      oprot.writeFieldEnd();
    }
    if (this.status != null) {
      oprot.writeFieldBegin(STATUS_FIELD_DESC);
      oprot.writeI32(this.status.getValue());
      oprot.writeFieldEnd();
    }
    if (is_set_num_workers()) {
      oprot.writeFieldBegin(NUM_WORKERS_FIELD_DESC);
      oprot.writeI64(this.num_workers);
      oprot.writeFieldEnd();
    }
    if (this.component_executors != null) {
      if (is_set_component_executors()) {
        oprot.writeFieldBegin(COMPONENT_EXECUTORS_FIELD_DESC);
        {
          oprot.writeMapBegin(new org.apache.thrift.protocol.TMap(org.apache.thrift.protocol.TType.STRING, org.apache.thrift.protocol.TType.I32, this.component_executors.size()));
          for (Map.Entry<String, Integer> _iter212 : this.component_executors.entrySet())
          {
            oprot.writeString(_iter212.getKey());
            oprot.writeI32(_iter212.getValue());
          }
          oprot.writeMapEnd();
        }
        oprot.writeFieldEnd();
      }
    }
    if (is_set_launch_time_secs()) {
      oprot.writeFieldBegin(LAUNCH_TIME_SECS_FIELD_DESC);
      oprot.writeI32(this.launch_time_secs);
      oprot.writeFieldEnd();
    }
    if (this.owner != null) {
      if (is_set_owner()) {
        oprot.writeFieldBegin(OWNER_FIELD_DESC);
        oprot.writeString(this.owner);
        oprot.writeFieldEnd();
      }
    }
    oprot.writeFieldStop();
    oprot.writeStructEnd();
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder("StormBase(");
    boolean first = true;

    sb.append("name:");
    if (this.name == null) {
      sb.append("null");
    } else {
      sb.append(this.name);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("status:");
    if (this.status == null) {
      sb.append("null");
    } else {
      sb.append(this.status);
    }
    first = false;
    if (is_set_num_workers()) {
      if (!first) sb.append(", ");
      sb.append("num_workers:");
      sb.append(this.num_workers);
      first = false;
    }
    if (is_set_component_executors()) {
      if (!first) sb.append(", ");
      sb.append("component_executors:");
      if (this.component_executors == null) {
        sb.append("null");
      } else {
        sb.append(this.component_executors);
      }
      first = false;
    }
    if (is_set_launch_time_secs()) {
      if (!first) sb.append(", ");
      sb.append("launch_time_secs:");
      sb.append(this.launch_time_secs);
      first = false;
    }
    if (is_set_owner()) {
      if (!first) sb.append(", ");
      sb.append("owner:");
      if (this.owner == null) {
        sb.append("null");
      } else {
        sb.append(this.owner);
      }
      first = false;
    }
    sb.append(")");
    return sb.toString();
  }

  public void validate() throws org.apache.thrift.TException {
    // check for required fields
    if (!is_set_name()) {
      throw new org.apache.thrift.protocol.TProtocolException("Required field 'name' is unset! Struct:" + toString());
    }

    if (!is_set_status()) {
      throw new org.apache.thrift.protocol.TProtocolException("Required field 'status' is unset! Struct:" + toString());
    }

  }

  private void writeObject(java.io.ObjectOutputStream out) throws java.io.IOException {
    try {
      write(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(out)));
    } catch (org.apache.thrift.TException te) {
      throw new java.io.IOException(te);
    }
  }

  private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, ClassNotFoundException {
    try {
      // it doesn't seem like you should have to do this, but java serialization is wacky, and doesn't call the default constructor.
      __isset_bit_vector = new BitSet(1);
      read(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(in)));
    } catch (org.apache.thrift.TException te) {
      throw new java.io.IOException(te);
    }
  }

}

